# SPDX-FileCopyrightText: Â© 2023 Foundation Devices, Inc. <hello@foundationdevices.com>
# SPDX-License-Identifier: GPL-3.0-or-later

name: Lint
on: [push]
jobs:
  is-reuse-compliant:
    name: Is REUSE compliant?
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: fsfe/reuse-action@v2

  is-the-code-compilable:
    name: Is the code compilable?
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/rust-toolchain
        with:
          toolchain: 1.74
      - run: cargo check
      # The foundation-ffi crate won't compile for x86_64 targets because it
      # requires a nightly Rust compiler for defining a global allocator and
      # the exception handler.
      #
      # So, disable it for now.
      - run: cargo check --no-default-features --workspace --exclude foundation-ffi
      - run: cargo check --all-features

  is-the-code-formatted:
    name: Is the code formatted?
    needs: [is-the-code-compilable]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/rust-toolchain
        with:
          toolchain: 1.74
          components: rustfmt
      - run: cargo fmt --all -- --check

  clippy-lints-pass:
    name: Clippy lints pass?
    needs: [is-the-code-compilable]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/rust-toolchain
        with:
          toolchain: 1.74
          components: clippy
      - run: cargo clippy

  tests-pass:
    name: Tests pass?
    needs: [is-the-code-compilable]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/rust-toolchain
        with:
          toolchain: 1.74
      - run: cargo test
      - run: cargo test --no-default-features --workspace --exclude foundation-ffi
      - run: cargo test --all-features
